package no.mil.fnse.service;

import java.io.IOException;
import java.net.DatagramPacket;

import org.springframework.scheduling.annotation.EnableScheduling;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Service;

import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;

import no.mil.fnse.model.Controller;
import no.mil.fnse.model.Peer;
import no.mil.fnse.configuration.DiscoveryConfiguration;

@EnableScheduling
@Service
public class DiscoveryServiceImpl implements DiscoveryService {
	final int HELLO_INTERVAL = 30;
	boolean listenToHelloStarted = false;


	/**
	 * Sends a HELLO message every HELLO_INTERVAL
	 */
	@Scheduled(initialDelay=5*1000,fixedRate=30000)
	public void sendHello() {
		System.out.println("Trying to send HELLO");
        try {
			DiscoveryConfiguration.SERVER_SOCKET.send(DiscoveryConfiguration.HELLO_PACKET);
			System.out.println("HELLO Sent");
		} catch (IOException e) {
			e.printStackTrace();
		}		
	}

	
	
	public void checkDeadPeer() {
		// TODO Auto-generated method stub
		/*
		 * Check database where current date time > timestamp and not marked as DEAD
		 * 
		 */
		
		
	}



}
