package no.mil.fnse.model;

import java.io.Serializable;
import java.net.InetAddress;
import java.sql.Timestamp;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import no.mil.fnse.model.values.PeerStatus;

/**
 * 
 * @author Ida Marie Fr√∏seth
 * @version $Id: Publisher.java 29 2016-05-24 19:28:08Z idamfro $
 */
@Entity
@Table(name="peer")
public class Peer implements Serializable{

	private InetAddress localInterfaceIp;
	
	private InetAddress remoteInterfaceIp;
	
	private Timestamp deadTime;
	
	private PeerStatus status;
	
	private SDNController controller;
	
	public Peer(){
		
	}
	
	 // -------------------------------------------------------------------------
    // Equals and hashcode
    // -------------------------------------------------------------------------

    @Override
    public int hashCode()
    {
        return localInterfaceIp.hashCode();
    }

    @Override
    public boolean equals( Object o )
    {
        if ( this == o )
        {
            return true;
        }

        if ( o == null )
        {
            return false;
        }

        if ( !(o instanceof Peer) )
        {
            return false;
        }

        final Peer other = (Peer) o;

        return (localInterfaceIp+""+remoteInterfaceIp).equals( other.getLocalInterfaceIp() +"" + other.getRemoteInterfaceIp() );
    }
    
	// -------------------------------------------------------------------------
    // Setters and getters
    // -------------------------------------------------------------------------


	@Column(name = "PEER_LOCAL_IP", nullable = false)
	@Id
	public InetAddress getLocalInterfaceIp() {
		return localInterfaceIp;
	}
	public void setLocalInterfaceIp(InetAddress localInterfaceAddress) {
		this.localInterfaceIp = localInterfaceAddress;
	}
	
	@Column(name = "PEER_REMOTE_IP", nullable = false)
	@Id
	public InetAddress getRemoteInterfaceIp() {
		return remoteInterfaceIp;
	}
	public void setRemoteInterfaceIp(InetAddress remoteInterfaceIp) {
		this.remoteInterfaceIp = remoteInterfaceIp;
	}
	
	@Column(name = "PEER_DEAD_TIME")
	public Timestamp getDeadTime() {
		return deadTime;
	}
	public void setDeadTime(Timestamp timestamp) {
		this.deadTime = timestamp;
	}
	
	@Column(name = "PEER_STATUS")
	public PeerStatus getStatus() {
		return status;
	}
	public void setStatus(PeerStatus status) {
		this.status = status;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "CONTROLLER_IP", nullable = false)
	public SDNController getController() {
		return controller;
	}

	public void setController(SDNController controller) {
		this.controller = controller;
	}
	
	

}
