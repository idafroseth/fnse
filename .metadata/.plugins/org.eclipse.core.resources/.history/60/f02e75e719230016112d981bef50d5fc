package no.mil.fnse.discovery.configuration;

import java.io.File;
import java.io.IOException;
import java.net.DatagramPacket;
import java.net.MulticastSocket;

import org.apache.log4j.Logger;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.scheduling.annotation.Scheduled;

import com.fasterxml.jackson.databind.ObjectMapper;

import no.mil.fnse.model.DiscoveryConfig;
import no.mil.fnse.service.TelnetCommunication;
import no.mil.fnse.southbound.model.Router;

@Configuration
@ComponentScan("no.mil.fnse")
public class CoreConfig {

	static Logger logger = Logger.getLogger(DiscoveryConfiguration.class);

	public static DiscoveryConfig DISCOVERY_CONFIG = new DiscoveryConfig();


	private boolean hasRun = false;

	/**
	 * Read the config.json file and configuring the basic values as Hello
	 * interval,
	 */
	@Scheduled(fixedRate = 3600000)
	public void configure() {
		if (!hasRun) {
			ObjectMapper mapper = new ObjectMapper();
			try {
				DISCOVERY_CONFIG = mapper.readValue(new File(System.getProperty("user.dir") + "/config.json"),
						DiscoveryConfig.class);
				connectToNetworkElements();

			} catch (IOException e) {
				logger.error("Attached failed: " + e);
			}
			hasRun = true;
		}

	}

	private void connectToNetworkElements() {
		for (Router router : DISCOVERY_CONFIG.getNetworkElements()) {
			router.setVty(new TelnetCommunication());
			router.openVty();
			logger.info("Successful connection to NetworkElement - " + router.getManagementIp());
		}

	}

}
